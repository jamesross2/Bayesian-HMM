import typing
from . import dirichlet_distribution_family as dirichlet_distribution_family, hyperparameter as hyperparameter, states as states, variable as variable
from _typeshed import Incomplete

class HierarchicalDirichletDistribution(variable.Variable):
    beta: Incomplete
    pi: Incomplete
    def __init__(self, beta: hyperparameter.Hyperparameter) -> None: ...
    def log_likelihood(self) -> float: ...
    def resample(self, counts: typing.Dict[states.State, typing.Dict[states.State, int]]) -> None: ...
    def add_state(self, state: states.State, inner: bool = ..., outer: bool = ...) -> None: ...
    def remove_state(self, state: states.State, inner: bool = ..., outer: bool = ...) -> None: ...
