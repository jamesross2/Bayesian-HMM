import typing
from . import auxiliary_variable as auxiliary_variable, hyperparameter as hyperparameter, states as states, variable as variable
from _typeshed import Incomplete

class StickBreakingProcess(variable.Variable):
    alpha: Incomplete
    value: Incomplete
    def __init__(self, alpha: hyperparameter.Hyperparameter) -> None: ...
    def log_likelihood(self) -> float: ...
    def resample(self, auxiliary: auxiliary_variable.AuxiliaryVariable) -> typing.Dict['states.State', float]: ...
    def add_state(self, state: states.State) -> None: ...
    def remove_state(self, state: states.State) -> None: ...
