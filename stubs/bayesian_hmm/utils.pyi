import typing
from _typeshed import Incomplete

NumericIterableType: Incomplete
IteratorOutputType: Incomplete

def label_generator(labels: typing.Sequence[str] = ...) -> typing.Generator[str, None, None]: ...
def dirichlet_process_generator(alpha: typing.Union[int, float] = ..., output_generator: typing.Optional[typing.Iterator[IteratorOutputType]] = ...) -> typing.Iterator[IteratorOutputType]: ...
def max_dict(d: typing.Dict[str, typing.Union[int, float]], eps: float = ...) -> typing.Dict[str, float]: ...
def shrink_probabilities(d: NumericIterableType, eps: float = ...) -> NumericIterableType: ...
